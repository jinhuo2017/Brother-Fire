package String;

import java.util.HashMap;

public class longestSubstringWithoutRepeatingCharacters {
    public int lengthOfLongestSubstring(String s) {
        int n = s.length(), ans = 0;
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0, j = 0; j < n; j++) {
            if (map.containsKey(s.charAt(j))) {
                i = Math.max(i, map.get(s.charAt(j)));
            }
            ans = Math.max(ans, j + 1 - i);
            map.put(s.charAt(j), j + 1);
        }
        return ans;
    }

    public static void main(String[] args) {
        longestSubstringWithoutRepeatingCharacters longest = new longestSubstringWithoutRepeatingCharacters();
        String s = "abcabcbb";
        int ans = longest.lengthOfLongestSubstring(s);
        System.out.println(ans);
    }
}
